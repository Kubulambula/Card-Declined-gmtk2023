[gd_scene load_steps=17 format=3 uid="uid://72an63mm5387"]

[ext_resource type="Texture2D" uid="uid://besagdb62xwrf" path="res://assets/particles/tiremark.png" id="1_8atxf"]
[ext_resource type="Texture2D" uid="uid://b54veqqqh6qqj" path="res://assets/cars/ambulance_open.png" id="2_ywh1v"]
[ext_resource type="Texture2D" uid="uid://dl75g3cjii4je" path="res://assets/cars/light.png" id="3_j2hlj"]
[ext_resource type="Texture2D" uid="uid://owk203cxcnf6" path="res://assets/particles/smoke.png" id="4_sl6uw"]
[ext_resource type="AudioStream" uid="uid://dv8e0p5jdmest" path="res://assets/sound/tires_squal_loop.wav" id="5_qw33i"]
[ext_resource type="AudioStream" uid="uid://chcxxvdokgovi" path="res://assets/sound/siren.ogg" id="6_1ymd3"]
[ext_resource type="AudioStream" uid="uid://dhwln5b5jr44w" path="res://assets/sound/door.wav" id="7_tk284"]
[ext_resource type="AudioStream" uid="uid://ddrlgtub1fsx4" path="res://assets/sound/impact.wav" id="8_v31s8"]

[sub_resource type="GDScript" id="GDScript_761fr"]
script/source = "extends RigidBody2D

signal stopped

const CLOSED = preload(\"res://assets/cars/ambulance.png\")
const OPENED = preload(\"res://assets/cars/ambulance_open.png\")

@onready var tiremark1 = %TireMark1
@onready var tiremark2 = %TireMark2
@onready var smoke = %Smoke
@onready var brake_light1 = %BrakeLight1
@onready var brake_light2 = %BrakeLight2
@onready var tirescreech = %TireScreech
@onready var door = %Door
@onready var impact = %Impact

var can_drive: bool = false:
	set(value):
		if value:
			$Sprite2D.texture = CLOSED
			%Door.play()
		can_drive = value

var notify_stop: bool = false

var drift_factor: float = 0.9

var is_braking: bool = false

var turn_acceleration: float = 0.2
var slow_turn_acceleration: float = 0.15
var max_turn_speed: float = 4

var forward_acceleration: float = 1100
var max_forward_speed: float = 950
var max_back_speed: float = 400

var last_linear_velocity: Vector2 = Vector2.ZERO

var max_speed: float = max_forward_speed
@onready var lights = $Sprite2D/AnimationPlayer

var input: Vector2 = Vector2.ZERO


func _input(event: InputEvent) -> void:
	if not can_drive:
		return
	
	if not event is InputEventKey:
		return
	
	is_braking = (Input.is_action_pressed(\"forward\") and Input.is_action_pressed(\"back\")) or Input.is_action_pressed(\"brake\")
	input = Vector2(Input.get_axis(\"left\", \"right\"), Input.get_axis(\"back\", \"forward\"))
	if input.y == -1:
		input.y = -0.5
	
	if input.y == -1 or transform.y.dot(linear_velocity.normalized()) > 0: #is going backward
		input.x = -input.x
	
	if Input.is_key_pressed(KEY_Q):
		if lights.is_playing():
			lights.play(\"RESET\")
			$Siren.playing = false
		else:
			lights.play(\"flash\")
			$Siren.playing = true


func _integrate_forces(state: PhysicsDirectBodyState2D) -> void:
	if is_braking:
		linear_damp = 2.0 if can_drive else 3.5
		angular_damp = 1.5 if can_drive else 4.0
		input.y = 0
		drift_factor = 0.95
	else:
		linear_damp = 0.5
		angular_damp = 1
		drift_factor = 0.85
	
	apply_engine(state)
	remove_orthogonal_velocity()
	apply_steering(state)
	
	if state.linear_velocity.length() > max_speed:
		state.linear_velocity = state.linear_velocity.normalized() * max_speed
	
	tiremark1.emitting = is_drifting()
	tiremark2.emitting = is_drifting()
	smoke.emitting = is_drifting()
	brake_light1.energy = int(is_braking) * 5
	brake_light2.energy = int(is_braking) * 5
	
	if is_drifting():
		if not tirescreech.playing:
			tirescreech.play()
	else:
		if tirescreech.playing:
			tirescreech.stop()
	
	if notify_stop:
		if linear_velocity.length() < 25 and angular_velocity < 0.05:
			notify_stop = false
			stopped.emit()
			$Sprite2D.texture = OPENED
			%Door.play()
	
	last_linear_velocity = state.linear_velocity
#	print(\"l: \", linear_velocity.length())
#	print(\"a: \", angular_velocity)


func remove_orthogonal_velocity() -> void:
	var forward_velocity: Vector2 = -transform.y * -transform.y.dot(linear_velocity)
	var right_velocity: Vector2 = transform.x * transform.x.dot(linear_velocity)
	linear_velocity = forward_velocity + right_velocity * drift_factor


func is_drifting() -> bool:
	return (is_braking and linear_velocity.length() > 50) or abs(get_lateral_velocity()) > 170


func get_lateral_velocity() -> float:
	return transform.x.dot(linear_velocity)


func apply_steering(state) -> void:
	if state.linear_velocity.length() > 60 or input.y: # if moving
		state.angular_velocity += input.x * (turn_acceleration if state.linear_velocity.length() < 700 else slow_turn_acceleration)
	state.angular_velocity = clampf(state.angular_velocity, -max_turn_speed, max_turn_speed)


func apply_engine(state) -> void:
	var engine: Vector2 = -transform.y * forward_acceleration * input.y 
	state.apply_central_force(engine)


func stop_now() -> void:
	can_drive = false
	is_braking = true
	notify_stop = true


func _on_body_entered(body: Node) -> void:
	if impact.playing or body == Global.player:
		return
	if last_linear_velocity.length() > 25 or abs(angular_velocity) > 0.2:
		print(\"hit\")
		impact.play()
"

[sub_resource type="Gradient" id="Gradient_okphn"]
offsets = PackedFloat32Array(0, 0.722772, 1)
colors = PackedColorArray(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0)

[sub_resource type="Animation" id="Animation_15ohu"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("PointLight2D:energy")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.0]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("PointLight2D2:energy")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.0]
}

[sub_resource type="Animation" id="Animation_uxnvf"]
resource_name = "flash"
length = 0.2
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("PointLight2D:energy")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.1, 0.2),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [0.0, 8.0, 0.0]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("PointLight2D2:energy")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.1),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [8.0, 0.0]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_2uv7d"]
_data = {
"RESET": SubResource("Animation_15ohu"),
"flash": SubResource("Animation_uxnvf")
}

[sub_resource type="Curve" id="Curve_3momc"]
max_value = 2.0
_data = [Vector2(0, 0), 0.0, 0.0, 0, 0, Vector2(0.0643777, 1.05263), 0.0, 0.0, 0, 0, Vector2(1, 2), 0.0, 0.0, 0, 0]
point_count = 3

[sub_resource type="Gradient" id="Gradient_s4fac"]
offsets = PackedFloat32Array(0, 0.386139, 1)
colors = PackedColorArray(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0)

[sub_resource type="RectangleShape2D" id="RectangleShape2D_3hqtk"]
size = Vector2(75, 100)

[node name="Car" type="RigidBody2D"]
gravity_scale = 0.0
max_contacts_reported = 8
contact_monitor = true
can_sleep = false
linear_damp = 0.5
angular_damp = 1.0
script = SubResource("GDScript_761fr")

[node name="TireMark1" type="CPUParticles2D" parent="."]
unique_name_in_owner = true
position = Vector2(-25, 60)
emitting = false
amount = 200
lifetime = 8.0
texture = ExtResource("1_8atxf")
particle_flag_align_y = true
gravity = Vector2(0, 0)
color_ramp = SubResource("Gradient_okphn")

[node name="TireMark2" type="CPUParticles2D" parent="."]
unique_name_in_owner = true
position = Vector2(25, 60)
emitting = false
amount = 200
lifetime = 8.0
texture = ExtResource("1_8atxf")
particle_flag_align_y = true
gravity = Vector2(0, 0)
color_ramp = SubResource("Gradient_okphn")

[node name="Sprite2D" type="Sprite2D" parent="."]
scale = Vector2(1.15, 1.15)
texture = ExtResource("2_ywh1v")

[node name="PointLight2D2" type="PointLight2D" parent="Sprite2D"]
position = Vector2(15, -12)
scale = Vector2(0.4575, 0.4575)
color = Color(0, 0.501961, 0.694118, 1)
energy = 0.0
texture = ExtResource("3_j2hlj")
texture_scale = 3.0

[node name="PointLight2D" type="PointLight2D" parent="Sprite2D"]
position = Vector2(-13.913, 0)
scale = Vector2(0.4575, 0.4575)
color = Color(0.976471, 0.00784314, 0, 1)
energy = 0.0
texture = ExtResource("3_j2hlj")
texture_scale = 3.0

[node name="AnimationPlayer" type="AnimationPlayer" parent="Sprite2D"]
libraries = {
"": SubResource("AnimationLibrary_2uv7d")
}

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="."]
polygon = PackedVector2Array(0, -72, 24, -72, 40, -56, 40, -48, 40, 64, 32, 72, -32, 72, -40, 64, -40, -40, -40, -56, -24, -72)

[node name="Smoke" type="CPUParticles2D" parent="."]
unique_name_in_owner = true
position = Vector2(0, 50)
emitting = false
amount = 40
lifetime = 2.0
texture = ExtResource("4_sl6uw")
emission_shape = 4
emission_points = PackedVector2Array(-25, 30, 25, 30)
emission_colors = PackedColorArray()
gravity = Vector2(0, 0)
initial_velocity_min = 8.0
initial_velocity_max = 64.0
angle_min = -720.0
angle_max = 720.0
scale_amount_curve = SubResource("Curve_3momc")
color_ramp = SubResource("Gradient_s4fac")

[node name="BrakeLight1" type="PointLight2D" parent="."]
unique_name_in_owner = true
position = Vector2(-35, 70)
color = Color(0.905882, 0, 0, 1)
energy = 0.0
texture = ExtResource("3_j2hlj")
texture_scale = 0.5

[node name="BrakeLight2" type="PointLight2D" parent="."]
unique_name_in_owner = true
position = Vector2(32, 64)
color = Color(0.905882, 0, 0, 1)
energy = 0.0
texture = ExtResource("3_j2hlj")
texture_scale = 0.5

[node name="TireScreech" type="AudioStreamPlayer2D" parent="."]
unique_name_in_owner = true
stream = ExtResource("5_qw33i")

[node name="Siren" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource("6_1ymd3")
panning_strength = 2.0

[node name="Radio" type="AudioStreamPlayer2D" parent="."]
unique_name_in_owner = true

[node name="Door" type="AudioStreamPlayer2D" parent="."]
unique_name_in_owner = true
stream = ExtResource("7_tk284")

[node name="Impact" type="AudioStreamPlayer2D" parent="."]
unique_name_in_owner = true
stream = ExtResource("8_v31s8")

[node name="DoorArea" type="Area2D" parent="."]
collision_layer = 2
collision_mask = 2

[node name="Shape" type="CollisionShape2D" parent="DoorArea"]
position = Vector2(-80, -10)
shape = SubResource("RectangleShape2D_3hqtk")

[node name="GetOutPosition" type="Node2D" parent="DoorArea"]
position = Vector2(-100, -10)

[connection signal="body_entered" from="." to="." method="_on_body_entered"]
